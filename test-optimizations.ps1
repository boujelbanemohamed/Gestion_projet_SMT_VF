Write-Host "========================================" -ForegroundColor Cyan
Write-Host " Test des Optimisations de Performance" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# V√©rifier si le backend est en cours d'ex√©cution
Write-Host "V√©rification du backend..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:5000/api/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible. D√©marrez-le avec 'npm run dev' dans le dossier backend" -ForegroundColor Red
    Write-Host ""
    Write-Host "Pour d√©marrer le backend:" -ForegroundColor Yellow
    Write-Host "cd backend" -ForegroundColor White
    Write-Host "npm install" -ForegroundColor White
    Write-Host "npm run generate" -ForegroundColor White
    Write-Host "npm run migrate" -ForegroundColor White
    Write-Host "npm run dev" -ForegroundColor White
    exit 1
}

# V√©rifier si le frontend est en cours d'ex√©cution
Write-Host "V√©rification du frontend..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Frontend accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Frontend non accessible. D√©marrez-le avec 'npm run dev' dans le dossier frontend" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Green
Write-Host " Tests de Performance" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green

# Test 1: API Health Check
Write-Host ""
Write-Host "üß™ Test 1: Health Check" -ForegroundColor Cyan
$startTime = Get-Date
try {
    $response = Invoke-RestMethod -Uri "http://localhost:5000/api/health" -Method GET
    $endTime = Get-Date
    $duration = ($endTime - $startTime).TotalMilliseconds
    Write-Host "‚úÖ R√©ponse en ${duration}ms" -ForegroundColor Green
    Write-Host "   Status: $($response.status)" -ForegroundColor White
} catch {
    Write-Host "‚ùå √âchec du test health check" -ForegroundColor Red
}

# Test 2: Performance Metrics
Write-Host ""
Write-Host "üß™ Test 2: M√©triques de Performance" -ForegroundColor Cyan
$startTime = Get-Date
try {
    $response = Invoke-RestMethod -Uri "http://localhost:5000/api/performance" -Method GET
    $endTime = Get-Date
    $duration = ($endTime - $startTime).TotalMilliseconds
    Write-Host "‚úÖ M√©triques r√©cup√©r√©es en ${duration}ms" -ForegroundColor Green
    Write-Host "   Requ√™tes totales: $($response.totalRequests)" -ForegroundColor White
    Write-Host "   Temps moyen: $([math]::Round($response.averageResponseTime, 2))ms" -ForegroundColor White
    Write-Host "   Uptime: $([math]::Round($response.uptime, 2))s" -ForegroundColor White
} catch {
    Write-Host "‚ùå √âchec du test de m√©triques" -ForegroundColor Red
}

# Test 3: Login Performance
Write-Host ""
Write-Host "üß™ Test 3: Performance de Connexion" -ForegroundColor Cyan
$loginData = @{
    email = "admin@admin.com"
    password = "admin123"
} | ConvertTo-Json

$startTime = Get-Date
try {
    $response = Invoke-RestMethod -Uri "http://localhost:5000/api/auth/login" -Method POST -Body $loginData -ContentType "application/json"
    $endTime = Get-Date
    $duration = ($endTime - $startTime).TotalMilliseconds
    Write-Host "‚úÖ Connexion r√©ussie en ${duration}ms" -ForegroundColor Green
    
    $token = $response.token
    $headers = @{
        "Authorization" = "Bearer $token"
        "Content-Type" = "application/json"
    }
    
    # Test 4: Dashboard avec authentification
    Write-Host ""
    Write-Host "üß™ Test 4: Performance Dashboard" -ForegroundColor Cyan
    $startTime = Get-Date
    try {
        $dashResponse = Invoke-RestMethod -Uri "http://localhost:5000/api/dashboard" -Method GET -Headers $headers
        $endTime = Get-Date
        $duration = ($endTime - $startTime).TotalMilliseconds
        Write-Host "‚úÖ Dashboard charg√© en ${duration}ms" -ForegroundColor Green
        Write-Host "   Utilisateurs totaux: $($dashResponse.totalUsers)" -ForegroundColor White
        Write-Host "   Stock total: $($dashResponse.totalStock)" -ForegroundColor White
        Write-Host "   Activit√©s r√©centes: $($dashResponse.recentActivities.Count)" -ForegroundColor White
    } catch {
        Write-Host "‚ùå √âchec du test dashboard" -ForegroundColor Red
    }
    
    # Test 5: Liste des utilisateurs
    Write-Host ""
    Write-Host "üß™ Test 5: Performance Liste Utilisateurs" -ForegroundColor Cyan
    $startTime = Get-Date
    try {
        $usersResponse = Invoke-RestMethod -Uri "http://localhost:5000/api/users?page=1&limit=10" -Method GET -Headers $headers
        $endTime = Get-Date
        $duration = ($endTime - $startTime).TotalMilliseconds
        Write-Host "‚úÖ Liste utilisateurs charg√©e en ${duration}ms" -ForegroundColor Green
        Write-Host "   Utilisateurs: $($usersResponse.users.Count)" -ForegroundColor White
        Write-Host "   Total: $($usersResponse.pagination.total)" -ForegroundColor White
    } catch {
        Write-Host "‚ùå √âchec du test liste utilisateurs" -ForegroundColor Red
    }
    
} catch {
    Write-Host "‚ùå √âchec de la connexion" -ForegroundColor Red
    Write-Host "   V√©rifiez que la base de donn√©es est initialis√©e avec 'npm run seed'" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Green
Write-Host " R√©sum√© des Tests" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ Objectifs de Performance:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Health Check: < 50ms" -ForegroundColor White
Write-Host "   ‚Ä¢ Connexion: < 200ms" -ForegroundColor White
Write-Host "   ‚Ä¢ Dashboard: < 500ms" -ForegroundColor White
Write-Host "   ‚Ä¢ Liste utilisateurs: < 300ms" -ForegroundColor White
Write-Host ""
Write-Host "üìä Pour des tests plus d√©taill√©s:" -ForegroundColor Yellow
Write-Host "   cd backend && npm run test:performance" -ForegroundColor White
Write-Host ""
Write-Host "üåê Acc√®s √† l'application:" -ForegroundColor Yellow
Write-Host "   Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "   API: http://localhost:5000/api" -ForegroundColor White
Write-Host "   M√©triques: http://localhost:5000/api/performance" -ForegroundColor White
Write-Host ""
Write-Host "üîë Comptes de test:" -ForegroundColor Yellow
Write-Host "   Admin: admin@admin.com / admin123" -ForegroundColor White
Write-Host "   User: user@example.com / user123" -ForegroundColor White
Write-Host ""

Read-Host "Appuyez sur Entr√©e pour continuer"
